{
  "openapi": "3.0.1",
  "info": {
    "title": "DLCS API",
    "description": "API for interacting with DLCS",
    "version": "v2"
  },
  "paths": {
    "/customers/{customerId}/keys": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Get a list of all the API Keys available for this customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id to get keys for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyHydraCollection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Obtain a new API key by posting an empty payload.\r\n            \r\nThe return value contains both Key and Secret - it is the only time the Secret is visible",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/keys\r\n    { }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id to create key for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/keys/{key}": {
      "delete": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Remove a key so that it can no longer be used.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id that owns key to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key to remove",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get all the customers.",
        "description": "Although it returns a paged collection, the page size is always the total number of customers:\r\nclients don't need to page this collection, it contains all customers.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JObjectHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JObjectHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JObjectHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new Customer.\r\n\r\nOnly an admin may call this.",
        "description": "Sample request:\r\n            \r\n    POST: /customers\r\n    {\r\n        \"Name\": \"new-url-friendly-name\"\r\n        \"DisplayName\": \"Display Name\"\r\n    }",
        "requestBody": {
          "description": "Object containing new customer to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get details of specified customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "Make a partial update to customer.\r\nNote: Only the DisplayName property can be updated",
        "description": "Sample request:\r\n            \r\n    PATCH: /customers/100\r\n    {\r\n        \"DisplayName\": \"Updated Display Name\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to Patch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Hydra model containing changes to make (only DisplayName is supported)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/allImages": {
      "post": {
        "tags": [
          "CustomerImages"
        ],
        "summary": "Accepts a list of image identifiers, will return a list of matching images.\r\n            \r\nThis endpoint doesn't support paging - all results are returned in single page",
        "description": "Sample request:\r\n\r\n    POST: /customers/1/allImages\r\n    {\r\n        \"@context\": \"http://www.w3.org/ns/hydra/context.jsonld\",\r\n        \"@type\":\"Collection\",\r\n        \"member\": [\r\n            { \"id\": \"1/1/foo\" },\r\n            { \"id\": \"1/99/bar\" }\r\n        ]\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/deleteImages": {
      "post": {
        "tags": [
          "CustomerImages"
        ],
        "summary": "Accepts a list of image identifiers, will delete those that exist from DB",
        "description": "Sample request:\r\n\r\n    POST: /customers/1/deleteImages\r\n    {\r\n        \"@context\": \"http://www.w3.org/ns/hydra/context.jsonld\",\r\n        \"@type\":\"Collection\",\r\n        \"member\": [\r\n            { \"id\": \"1/1/foo\" },\r\n            { \"id\": \"1/99/bar\" }\r\n        ]\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deleteFrom",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdentifierOnlyHydraCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/originStrategies": {
      "get": {
        "tags": [
          "CustomerOriginStrategies"
        ],
        "summary": "Get the user's origin strategies",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategyHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerOriginStrategies"
        ],
        "summary": "Update an origin strategy owned by the user",
        "description": "Sample request:\r\n    POST: /customers/1/originStrategies\r\n    {\r\n         \"regex\": \"http[s]?://(.*).my-regex.com\",\r\n         \"order\": \"1\",\r\n         \"strategy\": \"basic-http-authentication\", \r\n         \"credentials\": \"{ \\\"user\\\": \\\"my-username\\\", \\\"password\\\": \\\"my-password\\\" }\",\r\n         \"optimised\": \"false\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/originStrategies/{strategyId}": {
      "get": {
        "tags": [
          "CustomerOriginStrategies"
        ],
        "summary": "Get a specified origin strategy owned by the user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "strategyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerOriginStrategies"
        ],
        "summary": "Update an origin strategy owned by the user",
        "description": "Sample request:\r\n    PUT: /customers/1/originStrategies/68a8931b-e815-492b-bfe9-2f8135ba4898\r\n    {\r\n         \"regex\": \"http[s]?://(.*).my-regex.com\",\r\n         \"order\": \"1\",\r\n         \"strategy\": \"basic-http-authentication\", \r\n         \"credentials\": \"{ \\\"user\\\": \\\"my-username\\\", \\\"password\\\": \\\"my-password\\\" }\",\r\n         \"optimised\": \"false\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "strategyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOriginStrategy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOriginStrategy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerOriginStrategies"
        ],
        "summary": "Delete a specified origin strategy owned by the user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "strategyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/imageOptimisationPolicies": {
      "get": {
        "tags": [
          "CustomerPolicy"
        ],
        "summary": "Get paged list of all customer accessible image optimisation policies (customer specific + global)\r\n            \r\nSupports ?page= and ?pageSize= query parameters",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicyHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/imageOptimisationPolicies/{imageOptimisationPolicyId}": {
      "get": {
        "tags": [
          "CustomerPolicy"
        ],
        "summary": "Get details of specified image optimisation policy",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageOptimisationPolicyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue": {
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Get details of default customer queue",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to get queue details for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Create a batch of images to ingest.\r\n            \r\nThese will be enqueued for processing and asynchronously ingested",
        "description": "Sample request:\r\n            \r\n    POST: /customers/99/queue\r\n    {\r\n        \"@context\": \"http://www.w3.org/ns/hydra/context.jsonld\",\r\n        \"@type\": \"Collection\",\r\n        \"member\": [\r\n        {\r\n            \"id\": \"foo\",\r\n            \"space\": 1,\r\n            \"origin\": \"https://example.origin/foo.jpg\",\r\n            \"family\": \"I\",\r\n            \"mediaType\": \"image/jpeg\"\r\n        },\r\n        {\r\n            \"id\": \"bar\",\r\n            \"space\": 2,\r\n            \"origin\": \"https://example.origin/movie.mp4\",\r\n            \"family\": \"T\",\r\n            \"mediaType\": \"video/mp4\"\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to create batch for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Hydra collection of assets to add to batch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue/priority": {
      "post": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Create a batch of images to ingest, adding request to priority queue\r\n            \r\nThe processing is the same but the priority queue is for images that need to be processed quickly.\r\nOnly Image assets are supported",
        "description": "Sample request:\r\n            \r\n    POST: /customers/99/queue/priority\r\n    {\r\n        \"@context\": \"http://www.w3.org/ns/hydra/context.jsonld\",\r\n        \"@type\": \"Collection\",\r\n        \"member\": [\r\n        {\r\n            \"id\": \"foo\",\r\n            \"space\": 1,\r\n            \"origin\": \"https://example.origin/foo.jpg\",\r\n            \"family\": \"I\",\r\n            \"mediaType\": \"image/jpeg\"\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer to create batch for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Hydra collection of assets to add to batch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Get details of priority customer queue",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue/batches/{batchId}": {
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Get details of specified batch",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "description": "Id of batch to load",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueue"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue/batches/{batchId}/images": {
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue/batches/{batchId}/test": {
      "post": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Tests batch to check if superseded or completed and updates underlying batch accordingly.\r\n            \r\nPost empty body.",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/queue/batches/12345/test\r\n    { }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "description": "Id of batch to test",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/customers/{customerId}/queue/batches": {
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Get details of all customer batches.\r\n            \r\nSupports ?page= and ?pageSize= query parameters for paging",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue/active": {
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Get details of customer active batches. An \"active\" batch is one that is incomplete and has not been superseded.\r\n            \r\nSupports ?page= and ?pageSize= query parameters for paging",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/queue/recent": {
      "get": {
        "tags": [
          "CustomerQueue"
        ],
        "summary": "Get details of customer recent batches. These are all batches that are finished, ordered by latest finished.\r\n            \r\nSupports ?page= and ?pageSize= query parameters for paging",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/resources/pdf/{queryName}": {
      "delete": {
        "tags": [
          "CustomerResources"
        ],
        "summary": "Deletes PDF generated for queryName using specified arguments.\r\nThis deletes both the control-file and PDF projection.",
        "description": "Sample request:\r\n            \r\n    DELETE /customers/2/resources/pdf/my-named-query?args=1/10/teststring",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "CustomerId to delete PDF from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "queryName",
            "in": "path",
            "description": "Name of named query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "description": "Named query arguments",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/customers/{customerId}/customHeaders": {
      "get": {
        "tags": [
          "CustomHeaders"
        ],
        "summary": "Get a list of Custom Headers owned by the calling user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeaderHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeaderHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeaderHydraCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomHeaders"
        ],
        "summary": "Create a new Custom Header owned by the calling user",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/customHeaders\r\n    {\r\n        \"key\": \"my-key\",\r\n        \"value\": \"my-value\"\r\n        (optional) \"space\": 1\r\n        (optional) \"role\": \"https://api.dlcs.digirati.io/customers/1/roles/my-role\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/customHeaders/{customHeaderId}": {
      "get": {
        "tags": [
          "CustomHeaders"
        ],
        "summary": "Get a specified Custom Header owned by the calling user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customHeaderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeader"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomHeaders"
        ],
        "summary": "Update an existing Custom Header owned by the calling user",
        "description": "Sample request:\r\n            \r\n    PUT: /customers/1/customHeaders/3abc55fd-eb2d-47e8-8966-5f71d8e26476\r\n    {\r\n        \"key\": \"my-new-key\",\r\n        \"value\": \"my-new-value\"\r\n        (optional) \"space\": 2\r\n        (optional) \"role\": \"https://api.dlcs.digirati.io/customers/1/roles/my-new-role\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customHeaderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomHeader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHeader"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomHeaders"
        ],
        "summary": "Delete a specified Custom Header owned by the calling user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customHeaderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/defaultDeliveryChannels": {
      "get": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Get paged list of all customer accessible default delivery channels (customer specific + system)\r\n            \r\nSupports ?page= and ?pageSize= query parameters",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannelHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannelHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannelHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Create a single default delivery channel",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{space}/defaultDeliveryChannels": {
      "get": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Get paged list of all customer accessible default delivery channels (customer specific + system)\r\n            \r\nSupports ?page= and ?pageSize= query parameters",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannelHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannelHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannelHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Create a single default delivery channel",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/defaultDeliveryChannels/{defaultDeliveryChannelId}": {
      "get": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Get an individual customer accessible default delivery channel (customer specific + system)",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "defaultDeliveryChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Update a default delivery channel",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "defaultDeliveryChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Delete an individual customer accessible default delivery channel (customer specific + system)",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "defaultDeliveryChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{space}/defaultDeliveryChannels/{defaultDeliveryChannelId}": {
      "get": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Get an individual customer accessible default delivery channel (customer specific + system)",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "defaultDeliveryChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Update a default delivery channel",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "defaultDeliveryChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultDeliveryChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultDeliveryChannel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DefaultDeliveryChannels"
        ],
        "summary": "Delete an individual customer accessible default delivery channel (customer specific + system)",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "defaultDeliveryChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/deliveryChannelPolicies": {
      "get": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Get a collection of nested DeliveryChannelPolicy collections, sorted by channel",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicyHydraNestedCollectionHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicyHydraNestedCollectionHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicyHydraNestedCollectionHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/deliveryChannelPolicies/{deliveryChannelName}": {
      "get": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Get a collection of the customer's delivery channel policies for a specific channel",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryChannelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicyHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Create a new policy for a specified delivery channel",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/deliveryChannelPolicies/iiif-av\r\n    {\r\n        \"name\": \"my-video-policy\"\r\n        \"displayName\": \"My Video Policy\",\r\n        \"policyData\": \"[\"video-mp4-720p\"]\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryChannelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/deliveryChannelPolicies/{deliveryChannelName}/{deliveryChannelPolicyName}": {
      "get": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Get a delivery channel policy belonging to a customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryChannelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryChannelPolicyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Create or update a specified customer delivery channel policy - \"name\" must be specified in URI",
        "description": "Sample request:\r\n            \r\n    PUT: /customers/1/deliveryChannelPolicies/iiif-av/my-video-policy\r\n    {\r\n        \"displayName\": \"My Updated Video Policy\",\r\n        \"policyData\": \"[\"video-mp4-720p\"]\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryChannelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryChannelPolicyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Update the supplied fields for a specified customer delivery channel policy",
        "description": "Sample request:\r\n            \r\n    PATCH: /customers/1/deliveryChannelPolicies/iiif-av/my-video-policy\r\n    {\r\n        \"displayName\": \"My Updated Video Policy\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryChannelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryChannelPolicyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChannelPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChannelPolicy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeliveryChannelPolicies"
        ],
        "summary": "Delete a specified delivery channel policy",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryChannelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryChannelPolicyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Main EntryPoint of API, containing Hypermedia links",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntryPoint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntryPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntryPoint"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}/images/{imageId}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get details of a single Hydra Image.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Image"
        ],
        "summary": "Create or update asset at specified ID.\r\n            \r\nPUT requests always trigger reingesting of asset - in general batch processing should be preferred.\r\n            \r\nImage + File assets are ingested synchronously. Timebased assets are ingested asynchronously.\r\n            \r\n\"File\" property should be base64 encoded image, if included.",
        "description": "Sample request:\r\n            \r\n    PUT: /customers/1/spaces/1/images/my-image\r\n    {\r\n        \"@type\":\"Image\",\r\n        \"family\": \"I\",\r\n        \"origin\": \"https://example.text/.../image.jpeg\",\r\n        \"mediaType\": \"image/jpeg\",\r\n        \"string1\": \"my-metadata\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The body of the request contains the Asset in Hydra JSON-LD form (Image class)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "507": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Image"
        ],
        "summary": "Make a partial update to an existing asset resource.\r\n            \r\nThis may trigger a reingest depending on which fields have been updated.\r\n\r\nPATCH asset at that location.",
        "description": "Sample request:\r\n            \r\n    PATCH: /customers/1/spaces/1/images/my-image\r\n    {\r\n        \"origin\": \"https://example.text/.../image.jpeg\",\r\n        \"string1\": \"my-new-metadata\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The body of the request contains the Asset in Hydra JSON-LD form (Image class)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "507": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "DELETE asset at specified location. This will remove asset immediately, generated derivatives will be picked up\r\nand processed eventually.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteFrom",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Ingest specified file bytes to DLCS. Only \"I\" family assets are accepted.\r\n\"File\" property should be base64 encoded image.",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/spaces/1/images/my-image\r\n    {\r\n        \"@type\":\"Image\",\r\n        \"family\": \"I\",\r\n        \"file\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAM....\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageWithFile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}/images/{imageId}/reingest": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Reingest asset at specified location",
        "description": "Sample request:\r\n            \r\n    POST /customers/99/spaces/10/images/changed_image/reingest",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}/images/{imageId}/metadata": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get transcode metadata for Timebased assets",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderJob"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderJob"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderJob"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Images"
        ],
        "summary": "PATCH a collection of images.\r\nThis is for bulk patch operations on images in the same space.",
        "description": "Sample request:\r\n            \r\n    PATCH: /customers/1/spaces/5/images\r\n    {\r\n        \"@context\": \"http://www.w3.org/ns/hydra/context.jsonld\",\r\n        \"@type\": \"Collection\",\r\n        \"member\": [\r\n        {\r\n            \"id\": \"identifier-1\",\r\n            \"string3\": \"patched\"\r\n        }]\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "(from resource path)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "(from resource path)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON-LD request body, a HydraCollection of Hydra Image objects.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageHydraCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageHydraCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/namedQueries": {
      "get": {
        "tags": [
          "NamedQueries"
        ],
        "summary": "Get a list of all available Named Queries, either global or owned by the user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQueryHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQueryHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQueryHydraCollection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NamedQueries"
        ],
        "summary": "Create a new Named Query owned by the user - Only administrators may create a global named query",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/namedQueries\r\n    {\r\n        \"name\":\"my-named-query\",\r\n        \"template\":\"space=example\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/namedQueries/{namedQueryId}": {
      "get": {
        "tags": [
          "NamedQueries"
        ],
        "summary": "Get a specified Named Query, either global or owned by the user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namedQueryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQuery"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQuery"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQuery"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NamedQueries"
        ],
        "summary": "Update an existing Named Query owned by the user - currently, only the template can be modified",
        "description": "Sample request:\r\n            \r\n    PUT: /customers/1/namedQueries/a90d6e44-4cdb-410b-999e-30c2ea3955b2\r\n    {\r\n        \"template\":\"space=example-updated\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namedQueryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NamedQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQuery"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQuery"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedQuery"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NamedQueries"
        ],
        "summary": "Delete a specified Named Query owned by the user",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namedQueryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/imageOptimisationPolicies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get paged list of all global image optimisation policies.\r\n            \r\nSupports ?page= and ?pageSize= query parameters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicyHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/imageOptimisationPolicies/{imageOptimisationPolicyId}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get details of specified image optimisation policy",
        "parameters": [
          {
            "name": "imageOptimisationPolicyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageOptimisationPolicy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/storagePolicies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StoragePolicyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoragePolicyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoragePolicyHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/storagePolicies/{storagePolicyId}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get details of specified storage policy",
        "parameters": [
          {
            "name": "storagePolicyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StoragePolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoragePolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoragePolicy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/thumbnailPolicies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailPolicyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailPolicyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailPolicyHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/thumbnailPolicies/{thumbnailPolicyId}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get details of specified thumbnail policy",
        "parameters": [
          {
            "name": "thumbnailPolicyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailPolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailPolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThumbnailPolicy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/originStrategies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OriginStrategyHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OriginStrategyHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OriginStrategyHydraCollection"
                }
              }
            }
          }
        }
      }
    },
    "/originStrategies/{originStrategyId}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get details of specified origin strategy",
        "parameters": [
          {
            "name": "originStrategyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OriginStrategy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OriginStrategy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OriginStrategy"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/portalUsers": {
      "get": {
        "tags": [
          "PortalUsers"
        ],
        "summary": "GET /customers/{customerId}/portalUsers",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUserHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUserHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUserHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PortalUsers"
        ],
        "summary": "POST /customers/{customerId}/portalUsers",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/portalUsers/{userId}": {
      "get": {
        "tags": [
          "PortalUsers"
        ],
        "summary": "GET /customers/{customerId}/portalUsers/{userId}",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUser"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PortalUsers"
        ],
        "summary": "PATCH /customers/{customerId}/portalUsers/{userId}",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PortalUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PortalUsers"
        ],
        "summary": "DELETE /customers/{customerId}/portalUsers/{userId}",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/queue": {
      "get": {
        "tags": [
          "Queue"
        ],
        "summary": "Get counts of requests per queue.\r\n            \r\nThis includes DLCS-internal queue's and external queues (e.g. SQS)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QueueSummary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueSummary"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces": {
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Get details of all spaces for customer.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByDescending",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceHydraCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceHydraCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceHydraCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Space"
        ],
        "summary": "Create a new space within this customer. DLCS assigns identity.",
        "description": "Sample request:\r\n            \r\n    POST: /customers/1/spaces\r\n    {\r\n        \"@type\":\"Space\",\r\n        \"name\":\"foo\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}": {
      "delete": {
        "tags": [
          "Space"
        ],
        "summary": "Delete a specified customers space",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Get details of specified customers space",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Space"
        ],
        "summary": "Make a partial update of an existing space",
        "description": "Sample request:\r\n            \r\n    PATCH: /customers/1/spaces/1\r\n    {\r\n        \"@type\":\"Space\",\r\n        \"name\":\"foo\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Space"
        ],
        "summary": "Create or update a space within this customer. A new space's ID is set by the user in the URL.",
        "description": "Sample request:\r\n            \r\n    PUT: /customers/1/spaces/1\r\n    {\r\n        \"@type\":\"Space\",\r\n        \"name\":\"foo\"\r\n    }",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}/images/{imageId}/storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Gets the storage object of an image within a customer's space",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageStorage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageStorage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageStorage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/spaces/{spaceId}/storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get the storage object of a customer's space",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerStorage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerStorage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerStorage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get the customer's default storage object",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerStorage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerStorage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerStorage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiKeyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKey"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "AssetFamily": {
        "enum": [
          70,
          73,
          84
        ],
        "type": "integer",
        "format": "int32"
      },
      "Batch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "submitted": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "completed": {
            "type": "integer",
            "format": "int32"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errors": {
            "type": "integer",
            "format": "int32"
          },
          "superseded": {
            "type": "boolean"
          },
          "estCompletion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "images": {
            "type": "string",
            "nullable": true
          },
          "completedImages": {
            "type": "string",
            "nullable": true
          },
          "errorImages": {
            "type": "string",
            "nullable": true
          },
          "test": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Batch"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "CustomHeader": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomHeaderHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomHeader"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "portalUsers": {
            "type": "string",
            "nullable": true
          },
          "namedQueries": {
            "type": "string",
            "nullable": true
          },
          "originStrategies": {
            "type": "string",
            "nullable": true
          },
          "deliveryChannelPolicies": {
            "type": "string",
            "nullable": true
          },
          "defaultDeliveryChannels": {
            "type": "string",
            "nullable": true
          },
          "authServices": {
            "type": "string",
            "nullable": true
          },
          "roleProviders": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "string",
            "nullable": true
          },
          "queue": {
            "type": "string",
            "nullable": true
          },
          "spaces": {
            "type": "string",
            "nullable": true
          },
          "allImages": {
            "type": "string",
            "nullable": true
          },
          "storage": {
            "type": "string",
            "nullable": true
          },
          "keys": {
            "type": "string",
            "nullable": true
          },
          "customHeaders": {
            "type": "string",
            "nullable": true
          },
          "administrator": {
            "type": "boolean",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "acceptedAgreement": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerOriginStrategy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "regex": {
            "type": "string",
            "nullable": true
          },
          "originStrategy": {
            "type": "string",
            "nullable": true
          },
          "credentials": {
            "type": "string",
            "nullable": true
          },
          "optimised": {
            "type": "boolean",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerOriginStrategyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerOriginStrategy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "CustomerQueue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "batchesWaiting": {
            "type": "integer",
            "format": "int64"
          },
          "imagesWaiting": {
            "type": "integer",
            "format": "int64"
          },
          "batches": {
            "type": "string",
            "nullable": true
          },
          "images": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "string",
            "nullable": true
          },
          "recent": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerStorage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfStoredImages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalSizeOfStoredImages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalSizeOfThumbnails": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastCalculated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "storagePolicy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DefaultDeliveryChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "policy": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DefaultDeliveryChannelHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultDeliveryChannel"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "DeliveryChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "policy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeliveryChannelPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "policyData": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeliveryChannelPolicyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryChannelPolicy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "DeliveryChannelPolicyHydraNestedCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryChannelPolicy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeliveryChannelPolicyHydraNestedCollectionHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryChannelPolicyHydraNestedCollection"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "EntryPoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customers": {
            "type": "string",
            "nullable": true
          },
          "originStrategies": {
            "type": "string",
            "nullable": true
          },
          "portalRoles": {
            "type": "string",
            "nullable": true
          },
          "imageOptimisationPolicies": {
            "type": "string",
            "nullable": true
          },
          "thumbnailPolicies": {
            "type": "string",
            "nullable": true
          },
          "storagePolicies": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorTypeUri": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentifierOnly": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentifierOnlyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifierOnly"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "storageIdentifier": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "space": {
            "type": "integer",
            "format": "int32"
          },
          "imageService": {
            "type": "string",
            "nullable": true
          },
          "degradedInfoJson": {
            "type": "string",
            "nullable": true
          },
          "thumbnailImageService": {
            "type": "string",
            "nullable": true
          },
          "thumbnail400": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "maxUnauthorised": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "queued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dequeued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ingesting": {
            "type": "boolean",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "string1": {
            "type": "string",
            "nullable": true
          },
          "string2": {
            "type": "string",
            "nullable": true
          },
          "string3": {
            "type": "string",
            "nullable": true
          },
          "number1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "storage": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/AssetFamily"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "textType": {
            "type": "string",
            "nullable": true
          },
          "deliveryChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryChannel"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "batch": {
            "type": "string",
            "nullable": true
          },
          "imageOptimisationPolicy": {
            "type": "string",
            "nullable": true
          },
          "thumbnailPolicy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "ImageOptimisationPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "technicalDetails": {
            "type": "string",
            "nullable": true
          },
          "global": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageOptimisationPolicyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageOptimisationPolicy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "ImageStorage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "spaceId": {
            "type": "integer",
            "format": "int32"
          },
          "thumbnailSize": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkingInProgress": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImageWithFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "storageIdentifier": {
            "type": "string",
            "nullable": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "space": {
            "type": "integer",
            "format": "int32"
          },
          "imageService": {
            "type": "string",
            "nullable": true
          },
          "degradedInfoJson": {
            "type": "string",
            "nullable": true
          },
          "thumbnailImageService": {
            "type": "string",
            "nullable": true
          },
          "thumbnail400": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "maxUnauthorised": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "queued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dequeued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ingesting": {
            "type": "boolean",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "string1": {
            "type": "string",
            "nullable": true
          },
          "string2": {
            "type": "string",
            "nullable": true
          },
          "string3": {
            "type": "string",
            "nullable": true
          },
          "number1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "storage": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/AssetFamily"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "textType": {
            "type": "string",
            "nullable": true
          },
          "deliveryChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryChannel"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "batch": {
            "type": "string",
            "nullable": true
          },
          "imageOptimisationPolicy": {
            "type": "string",
            "nullable": true
          },
          "thumbnailPolicy": {
            "type": "string",
            "nullable": true
          },
          "file": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JObjectHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/JToken"
              }
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "NamedQuery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "global": {
            "type": "boolean",
            "nullable": true
          },
          "template": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NamedQueryHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamedQuery"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "OriginStrategy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "requiresCredentials": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OriginStrategyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginStrategy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "PartialCollectionView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "first": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PortalUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "roles": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PortalUserHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortalUser"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "QueueSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "incoming": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "timebased": {
            "type": "integer",
            "format": "int32"
          },
          "transcodeComplete": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "type": "integer",
            "format": "int32"
          },
          "failed": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "success": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "Space": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "modelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "maxUnauthorised": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approximateNumberOfImages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "defaultRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "images": {
            "type": "string",
            "nullable": true
          },
          "defaultDeliveryChannels": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "storage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpaceHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "StoragePolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "maximumNumberOfStoredImages": {
            "type": "integer",
            "format": "int64"
          },
          "maximumTotalSizeOfStoredImages": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "StoragePolicyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoragePolicy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "ThumbnailPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThumbnailPolicyHydraCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "withContext": {
            "type": "boolean"
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThumbnailPolicy"
            },
            "nullable": true
          },
          "view": {
            "$ref": "#/components/schemas/PartialCollectionView"
          }
        },
        "additionalProperties": false
      },
      "TranscoderInput": {
        "type": "object",
        "properties": {
          "aspectRatio": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "container": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "frameRate": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "interlaced": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "resolution": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TranscoderJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "outputKeyPrefix": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "input": {
            "$ref": "#/components/schemas/TranscoderInput"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscoderInput"
            },
            "nullable": true,
            "readOnly": true
          },
          "output": {
            "$ref": "#/components/schemas/TranscoderOutput"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscoderOutput"
            },
            "nullable": true,
            "readOnly": true
          },
          "pipelineId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "timing": {
            "$ref": "#/components/schemas/TranscoderTiming"
          },
          "userMetadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "playlists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscoderPlaylist"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TranscoderOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "durationMillis": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "statusDetail": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TranscoderPlaylist": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "outputKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusDetail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranscoderTiming": {
        "type": "object",
        "properties": {
          "finishTimeMillis": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "startTimeMillis": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "submitTimeMillis": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}